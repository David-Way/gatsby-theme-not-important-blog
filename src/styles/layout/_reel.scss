@import '../core/import-once';
@import '../core/variables';

@mixin reel {
  .l-reel {
    display: flex;
    z-index: 1;
    position: relative;
    overflow-x: auto;
    scrollbar-color: var(--cds-interactive-01) var(--cds-ui-background);

    &::-webkit-scrollbar {
      height: map-get($spacing, base);
    }
    
    &::-webkit-scrollbar-track {
      background-color: var(--cds-ui-background);
    }
    
    &::-webkit-scrollbar-thumb {
      background-color: var(--cds-ui-background);
      background-image: linear-gradient(var(--cds-ui-background) 0, var(--cds-ui-backgroundk) 0.25rem, var(--cds-interactive-01) 0.25rem, var(--cds-interactive-01) 0.75rem, var(--cds-ui-background) 0.75rem);
    }

    > * {
      margin-right: 0;
      min-width: 60%;
      z-index: 1;
    }

    @media (min-width: (36ch * 2)) {
      > * {
        min-width: 37%;
      }
    }

    &::after {
      content: '';
      flex: 0 0 map-get($spacing, 'xx-small');
    }

    &.js-is-overflowing {
      padding-bottom: map-get($spacing, 'small');
    }

    &__container {
      position: relative;
      z-index: 0;
      overflow: hidden;

      &::before,
      &::after {
        content: '';
        position: absolute;
        top: 0;
        bottom: 0;
        z-index: 2;
        width: 16px;
      }

      &::before {
        left: 0;
        background: linear-gradient(to left, rgba(255,255,255,0), rgba(255,255,255, 1));
      }

      &::after {
        right: 0;
        background: linear-gradient(to right, rgba(255,255,255,0), rgba(255,255,255, 1));
      }
    }
  }

  @each $key, $value in $spacing {
    .l-reel--spacing\:#{$key} > * {
      margin: $value;
    }
  }
}

@include exports('reel') {
  @include reel();
}